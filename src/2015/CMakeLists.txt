cmake_minimum_required(VERSION 3.1..3.11)

if(${CMAKE_VERSION} VERSION_LESS 3.12)
  cmake_policy(VERSION ${CMAKE_VERSION})
endif()

add_executable(2015.d1p1 d1p1.cpp)
add_executable(2015.d1p2 d1p2.cpp)
add_executable(2015.d2p1 d2p1.cpp)
add_executable(2015.d2p2 d2p2.cpp)
add_executable(2015.d3p1 d3p1.cpp)
add_executable(2015.d3p2 d3p2.cpp)
add_executable(2015.d4p1 d4p1.cpp)
target_link_libraries(2015.d4p1 crypto)
add_executable(2015.d4p2 d4p2.cpp)
target_link_libraries(2015.d4p2 crypto)
add_executable(2015.d5p1 d5p1.cpp)
add_executable(2015.d5p2 d5p2.cpp)
add_executable(2015.d6p1 d6p1.cpp)
add_executable(2015.d6p2 d6p2.cpp)
add_executable(2015.d7p1 d7p1.cpp)

resource(d1.input)
resource(d2.input)
resource(d3.input)
resource(d4.input)
resource(d5.input)
resource(d6.input)
resource(d7.input)

test(TARGET 2015.d1p1 INPUT d1.input)
test(TARGET 2015.d1p2 INPUT d1.input)
test(TARGET 2015.d2p1 INPUT d2.input)
test(TARGET 2015.d2p2 INPUT d2.input)
test(TARGET 2015.d3p1 INPUT d3.input)
test(TARGET 2015.d3p2 INPUT d3.input)
test(TARGET 2015.d4p1 INPUT d4.input)
test(TARGET 2015.d4p2 INPUT d4.input)
test(TARGET 2015.d5p1 INPUT d5.input)
test(TARGET 2015.d5p2 INPUT d5.input)
test(TARGET 2015.d6p1 INPUT d6.input)
test(TARGET 2015.d6p2 INPUT d6.input)
test(TARGET 2015.d7p1 INPUT d7.input)
